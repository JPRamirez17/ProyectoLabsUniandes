{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/commons/navbar/navbar.component.ts","./src/app/commons/navbar/navbar.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\nimport AOS from 'aos';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'front';\n\n  ngOnInit(): void {\n    AOS.init({\n        once: true\n    });\n  }\n}\n","<header>\n  <app-navbar></app-navbar>\n</header>\n<main>\n  <router-outlet></router-outlet>\n  <div class=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n    <div class=\"accordion-item\">\n      <h2 class=\"accordion-header\" id=\"flush-headingOne\">\n        <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\n          Accordion Item #1\n        </button>\n      </h2>\n      <div id=\"flush-collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\">\n        <div class=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the first item's accordion body.</div>\n      </div>\n    </div>\n    <div class=\"accordion-item\">\n      <h2 class=\"accordion-header\" id=\"flush-headingTwo\">\n        <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\n          Accordion Item #2\n        </button>\n      </h2>\n      <div id=\"flush-collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\" data-bs-parent=\"#accordionFlushExample\">\n        <div class=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the second item's accordion body. Let's imagine this being filled with some actual content.</div>\n      </div>\n    </div>\n    <div class=\"accordion-item\">\n      <h2 class=\"accordion-header\" id=\"flush-headingThree\">\n        <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\n          Accordion Item #3\n        </button>\n      </h2>\n      <div id=\"flush-collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample\">\n        <div class=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.</div>\n      </div>\n    </div>\n  </div>\n</main>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\n\nimport { NavbarComponent } from './commons/navbar/navbar.component';\n\nconst routes: Routes = [];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule.forRoot(routes),\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<nav class=\"navbar navbar-dark bg-dark\" data-aos=\"fade-down\">\n  <a class=\"navbar-brand\" href=\"#\">Username</a>\n  <ul class=\"navbar-nav mr-auto\">\n    <li class=\"nav-item\">\n      <a class=\"nav-item nav-link\" routerLink=\"/\">Home</a>\n    </li>\n    <em class=\"bi bi-star-fill\"></em>\n  </ul>\n</nav>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}